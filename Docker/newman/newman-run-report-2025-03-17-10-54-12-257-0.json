{
  "collection": {
    "_": {
      "postman_id": "243c4c87-937d-4bf2-803b-b7455b8c472c",
      "exporter_id": "732190"
    },
    "item": [
      {
        "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
        "name": "1-GetAllUsers",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "{{GlobalBaseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "//check status code is 200:",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "93534fe6-da41-4ad6-a718-e1afae241a99"
            }
          }
        ]
      },
      {
        "id": "d8cf7aaa-3259-493d-8b4a-f591f173cc7a",
        "name": "2-CreateAUser",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"seema\",\n    \"gender\": \"female\",\n    \"email\": \"apiautomation_{{$randomEmail}}\",\n    \"status\": \"inactive\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "70437104-cbd1-45b2-b856-61a6c06c6d83",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "const response = pm.response.json();",
                "const user_id = response.id;",
                "console.log(\"user id===>\" + user_id);",
                "pm.variables.set(\"userID\", user_id);",
                "//local variable: userID",
                "",
                "//LDECG",
                "",
                "//test cases:",
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"check user name is seema\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.name).to.eql(\"seema\");",
                "});",
                "",
                "pm.test(\"Content-Type is present\", function () {",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});"
              ],
              "_lastExecutionId": "0b950002-d736-4bbb-89b6-f09d22688e36"
            }
          }
        ]
      },
      {
        "id": "fd43fed3-497a-4fb4-a3e4-eaf057b9e41e",
        "name": "3-GetAUserByID",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{userID}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "094d270a-8ece-449b-98b2-11e18ec89ec5",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"check userID is correct\", function(){",
                "    const newUserId = pm.variables.get(\"userID\");",
                "    console.log(\"new user id is: \" + newUserId);",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.id).to.eql(newUserId);",
                "});"
              ],
              "_lastExecutionId": "981c9203-f6e1-4db0-b64c-9d366d434a2b"
            }
          }
        ]
      },
      {
        "id": "c49c4a22-dd3e-410a-89d5-b2621f98627d",
        "name": "4-UpdateAUserByID",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{userID}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \n    \"status\": \"active\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2a377578-6936-469c-8c98-adc050f67cb2",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Response time is less than 5000ms\", function () {",
                "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                "});",
                "",
                "pm.test(\"Your test name\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.status).to.eql(\"inactive\");",
                "});"
              ],
              "_lastExecutionId": "3ed3111b-d994-4c85-a525-e38593817722"
            }
          }
        ]
      },
      {
        "id": "6826e899-5e48-459c-a081-467d4dc0b371",
        "name": "5-DeleteAUserByID",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{userID}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "55cde90a-e160-4fab-907f-ed369e787c19",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 204\", function () {",
                "    pm.response.to.have.status(204);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "b0882f25-3df2-436e-81e0-167e406110de"
            }
          }
        ]
      },
      {
        "id": "f673dc55-5c4a-4612-804e-642689d5c5c0",
        "name": "6-GetAUserByID",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{userID}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "258c1bce-7425-4745-ab52-906d5beba668",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 404\", function () {",
                "    pm.response.to.have.status(404);",
                "});"
              ],
              "_lastExecutionId": "637fd890-b860-432a-ad65-f3b68447fbf2"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "243c4c87-937d-4bf2-803b-b7455b8c472c",
      "name": "GoRestAPIWorkflow",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-03-10T15:47:51.851Z",
      "postman_exported_using": "Postman/11.34.5"
    },
    "id": "012f09c1-a383-4205-bcaa-d9c2c60266a5",
    "name": "GoRestEnv",
    "values": [
      {
        "type": "any",
        "value": "https://gorest.co.in",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6",
        "key": "tokenID"
      },
      {
        "type": "any",
        "value": "",
        "key": "generatedEmail"
      }
    ]
  },
  "globals": {
    "id": "c9d73597-635e-47ee-a606-6e40069516a9",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 6,
        "pending": 0,
        "failed": 1
      },
      "tests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 11,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 591.3333333333334,
      "responseMin": 369,
      "responseMax": 1064,
      "responseSd": 370.3888347249265,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1742208848369,
      "completed": 1742208852089
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 6,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7383a82e-e47e-4cab-b2b2-e0315ce33d1f",
          "httpRequestId": "eec14756-7f7c-4691-a8fd-871a34a618f8"
        },
        "item": {
          "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
          "name": "1-GetAllUsers",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{GlobalBaseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "//check status code is 200:",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  ""
                ],
                "_lastExecutionId": "93534fe6-da41-4ad6-a718-e1afae241a99"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "{{globalbaseurl}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ed2134ab-9aad-4d0f-8523-fc2eddbada70",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{globalbaseurl}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{globalbaseurl}}"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "56c7a4b8-31c8-4172-8b15-742d70101092",
          "length": 6,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7fd2a928-6f12-40de-96c0-d214b8ed312e"
        },
        "item": {
          "id": "d8cf7aaa-3259-493d-8b4a-f591f173cc7a",
          "name": "2-CreateAUser",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"seema\",\n    \"gender\": \"female\",\n    \"email\": \"apiautomation_{{$randomEmail}}\",\n    \"status\": \"inactive\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "70437104-cbd1-45b2-b856-61a6c06c6d83",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const response = pm.response.json();",
                  "const user_id = response.id;",
                  "console.log(\"user id===>\" + user_id);",
                  "pm.variables.set(\"userID\", user_id);",
                  "//local variable: userID",
                  "",
                  "//LDECG",
                  "",
                  "//test cases:",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"check user name is seema\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.name).to.eql(\"seema\");",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});"
                ],
                "_lastExecutionId": "0b950002-d736-4bbb-89b6-f09d22688e36"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f718618f-31e6-4df0-8823-ae718b0c12c6",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "121",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"seema\",\n    \"gender\": \"female\",\n    \"email\": \"apiautomation_Tevin92@yahoo.com\",\n    \"status\": \"inactive\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "5d10950b-62bb-4733-be0e-948c1d52ba67",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Mar 2025 10:54:09 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "109"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"d035d2a9dcac49d4b528961e9925fc46\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7776156"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "85"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "1"
            },
            {
              "key": "x-request-id",
              "value": "e94c2b27-925f-4461-9db6-b556813b670f"
            },
            {
              "key": "x-runtime",
              "value": "0.050922"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=NhSzIIRz%2BN9%2FjCnFREvQFGamwkc17geUB6NH2XrWnWzXV2ozfCMa9cZPNjst5ePYMMDqtWatJ7CBV8O%2BEbAF83gbBiw2AoALLavn6VwgXIW4%2B24%2FXl7Qtz%2B%2BTjb%2Firo%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "921bf359ce3a2170-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=143822&min_rtt=143676&rtt_var=54172&sent=4&recv=5&lost=0&retrans=0&sent_bytes=2828&recv_bytes=974&delivery_rate=19882&cwnd=252&unsent_bytes=0&cid=cc4d6ce22ebd2234&ts=695&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              55,
              55,
              54,
              49,
              53,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              101,
              101,
              109,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              112,
              105,
              97,
              117,
              116,
              111,
              109,
              97,
              116,
              105,
              111,
              110,
              95,
              84,
              101,
              118,
              105,
              110,
              57,
              50,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1064,
          "responseSize": 109
        },
        "id": "d8cf7aaa-3259-493d-8b4a-f591f173cc7a",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "check user name is seema",
            "skipped": false
          },
          {
            "assertion": "Content-Type is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0520db0a-7719-4912-a953-777c2859f601",
          "length": 6,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a6f455ab-9496-4a5d-ba5c-3b234b5609b4"
        },
        "item": {
          "id": "fd43fed3-497a-4fb4-a3e4-eaf057b9e41e",
          "name": "3-GetAUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "094d270a-8ece-449b-98b2-11e18ec89ec5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"check userID is correct\", function(){",
                  "    const newUserId = pm.variables.get(\"userID\");",
                  "    console.log(\"new user id is: \" + newUserId);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.eql(newUserId);",
                  "});"
                ],
                "_lastExecutionId": "981c9203-f6e1-4db0-b64c-9d366d434a2b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7776156"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "06cd1ba0-a9c1-4f32-aac1-5def62366ca0",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c66d8a5d-50ce-4f89-b0e2-7e560eaa1a0a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Mar 2025 10:54:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"d035d2a9dcac49d4b528961e9925fc46\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "89"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "1"
            },
            {
              "key": "X-Request-Id",
              "value": "74a92c18-4dff-4054-ba3b-4d9d1ace194c"
            },
            {
              "key": "X-Runtime",
              "value": "0.040466"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "921bf35e8c3f2170-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              55,
              55,
              54,
              49,
              53,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              101,
              101,
              109,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              112,
              105,
              97,
              117,
              116,
              111,
              109,
              97,
              116,
              105,
              111,
              110,
              95,
              84,
              101,
              118,
              105,
              110,
              57,
              50,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 956,
          "responseSize": 109
        },
        "id": "fd43fed3-497a-4fb4-a3e4-eaf057b9e41e",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "check userID is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8e9018d7-2f5e-4fe7-bb80-2d91f4d998c9",
          "length": 6,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "897bee65-a405-4cfb-a76b-a1021661039f"
        },
        "item": {
          "id": "c49c4a22-dd3e-410a-89d5-b2621f98627d",
          "name": "4-UpdateAUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \n    \"status\": \"active\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a377578-6936-469c-8c98-adc050f67cb2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 5000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test(\"Your test name\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"inactive\");",
                  "});"
                ],
                "_lastExecutionId": "3ed3111b-d994-4c85-a525-e38593817722"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7776156"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "072b782a-256e-4718-8e9f-9b0f02a769d9",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "31",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \n    \"status\": \"active\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f5169404-d19d-4005-8a59-72c5ab569b24",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Mar 2025 10:54:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"c9286427499cef3e10429e89775159b5\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "89"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "b756f283-ba21-4f20-81bd-b247e1a795c6"
            },
            {
              "key": "x-runtime",
              "value": "0.076657"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=CeJcSDzN8eafAow5sZPyzhWOVujkBKP9x4m2fYWBLrJVQa2pll3a%2FJi%2BfymH3AZsd3rSvAgxnQaC9nFw1po5OTfUs6oBdUgdECPcOhmCmyKfvajAxi51cYbIHkB%2FQ4w%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "921bf364ac192170-MRS"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=179663&min_rtt=143676&rtt_var=100186&sent=12&recv=10&lost=0&retrans=1&sent_bytes=5865&recv_bytes=1771&delivery_rate=24642&cwnd=257&unsent_bytes=0&cid=cc4d6ce22ebd2234&ts=2137&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              55,
              55,
              54,
              49,
              53,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              101,
              101,
              109,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              112,
              105,
              97,
              117,
              116,
              111,
              109,
              97,
              116,
              105,
              111,
              110,
              95,
              84,
              101,
              118,
              105,
              110,
              57,
              50,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 396,
          "responseSize": 107
        },
        "id": "c49c4a22-dd3e-410a-89d5-b2621f98627d",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false
          },
          {
            "assertion": "Your test name",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Your test name",
              "message": "expected 'active' to deeply equal 'inactive'",
              "stack": "AssertionError: expected 'active' to deeply equal 'inactive'\n   at Object.eval sandbox-script.js:3:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "24dc1b44-f296-4a7c-b89b-92a23c3b8db4",
          "length": 6,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a06bbc2b-fe7a-4795-85ae-85a12ccbe42c"
        },
        "item": {
          "id": "6826e899-5e48-459c-a081-467d4dc0b371",
          "name": "5-DeleteAUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "55cde90a-e160-4fab-907f-ed369e787c19",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ],
                "_lastExecutionId": "b0882f25-3df2-436e-81e0-167e406110de"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7776156"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3a4a6459-2ef2-4737-9c3b-9fdf69d1fe86",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "27bba016-620b-4c43-acf7-62bde4f51b4e",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Mar 2025 10:54:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache"
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "88"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "2"
            },
            {
              "key": "X-Request-Id",
              "value": "8c686f94-0321-4ba7-9f97-cb36becf9b9e"
            },
            {
              "key": "X-Runtime",
              "value": "0.067216"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "921bf3674fa82170-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 763,
          "responseSize": 0
        },
        "id": "6826e899-5e48-459c-a081-467d4dc0b371",
        "assertions": [
          {
            "assertion": "Status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bdcd441d-80fc-4a83-9f0f-1b2086325e8d",
          "length": 6,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "354a71a4-6c39-4f3b-87b6-adfa05592bca"
        },
        "item": {
          "id": "f673dc55-5c4a-4612-804e-642689d5c5c0",
          "name": "6-GetAUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "258c1bce-7425-4745-ab52-906d5beba668",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "_lastExecutionId": "637fd890-b860-432a-ad65-f3b68447fbf2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7776156"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "52f8dddb-6463-48f0-a309-ea77b8fc6432",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a6c4006d-333d-42e6-b103-155da28c2a9a",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Mar 2025 10:54:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "32"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache"
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "87"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "8dc7911c-00f0-49ad-9c10-901988cf8da4"
            },
            {
              "key": "x-runtime",
              "value": "0.048473"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=d8FwERkYOvsSbxK02UJxTJ8wJUqBEaydzXVWcTX%2F%2F4od6LSmu9wup%2BqIqtEF8ou5c4KsF0tIYORPu8WzR23FKVilm2BMWQeGArL833pV870aFbjLUGtp2%2FZZBNHZKmQ%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "921bf36c2e2b2170-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=218528&min_rtt=143676&rtt_var=148748&sent=18&recv=14&lost=0&retrans=1&sent_bytes=8119&recv_bytes=2488&delivery_rate=29559&cwnd=257&unsent_bytes=0&cid=cc4d6ce22ebd2234&ts=3312&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 369,
          "responseSize": 32
        },
        "id": "f673dc55-5c4a-4612-804e-642689d5c5c0",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 357
    },
    "failures": [
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{globalbaseurl}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{globalbaseurl}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{globalbaseurl}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26)",
          "checksum": "103e5e9d326f9f56e847610a449377dc",
          "id": "dc2afb82-6473-4d0d-a28a-3305c166bd4d",
          "timestamp": 1742208848400,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 120,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
          "name": "1-GetAllUsers",
          "request": {
            "url": {
              "protocol": "http",
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{globalbaseurl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "ed2134ab-9aad-4d0f-8523-fc2eddbada70",
                "system": true
              },
              {
                "key": "Host",
                "value": "{{globalbaseurl}}",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "//check status code is 200:",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ]
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 6,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7383a82e-e47e-4cab-b2b2-e0315ce33d1f",
          "httpRequestId": "eec14756-7f7c-4691-a8fd-871a34a618f8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "8f1a38fbb4708623aafe992d2647a097",
          "id": "04104865-bbce-4f38-8e55-6b13db9c8fbb",
          "timestamp": 1742208848420,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
          "name": "1-GetAllUsers",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{GlobalBaseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "//check status code is 200:",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  ""
                ],
                "_lastExecutionId": "93534fe6-da41-4ad6-a718-e1afae241a99"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "243c4c87-937d-4bf2-803b-b7455b8c472c",
            "exporter_id": "732190"
          },
          "item": [
            {
              "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
              "name": "1-GetAllUsers",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users"
                  ],
                  "host": [
                    "{{GlobalBaseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "//check status code is 200:",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      ""
                    ],
                    "_lastExecutionId": "93534fe6-da41-4ad6-a718-e1afae241a99"
                  }
                }
              ]
            },
            {
              "id": "d8cf7aaa-3259-493d-8b4a-f591f173cc7a",
              "name": "2-CreateAUser",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"seema\",\n    \"gender\": \"female\",\n    \"email\": \"apiautomation_{{$randomEmail}}\",\n    \"status\": \"inactive\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "70437104-cbd1-45b2-b856-61a6c06c6d83",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const response = pm.response.json();",
                      "const user_id = response.id;",
                      "console.log(\"user id===>\" + user_id);",
                      "pm.variables.set(\"userID\", user_id);",
                      "//local variable: userID",
                      "",
                      "//LDECG",
                      "",
                      "//test cases:",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"check user name is seema\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.name).to.eql(\"seema\");",
                      "});",
                      "",
                      "pm.test(\"Content-Type is present\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});"
                    ],
                    "_lastExecutionId": "0b950002-d736-4bbb-89b6-f09d22688e36"
                  }
                }
              ]
            },
            {
              "id": "fd43fed3-497a-4fb4-a3e4-eaf057b9e41e",
              "name": "3-GetAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "094d270a-8ece-449b-98b2-11e18ec89ec5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"check userID is correct\", function(){",
                      "    const newUserId = pm.variables.get(\"userID\");",
                      "    console.log(\"new user id is: \" + newUserId);",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(newUserId);",
                      "});"
                    ],
                    "_lastExecutionId": "981c9203-f6e1-4db0-b64c-9d366d434a2b"
                  }
                }
              ]
            },
            {
              "id": "c49c4a22-dd3e-410a-89d5-b2621f98627d",
              "name": "4-UpdateAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \n    \"status\": \"active\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2a377578-6936-469c-8c98-adc050f67cb2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 5000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                      "});",
                      "",
                      "pm.test(\"Your test name\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql(\"inactive\");",
                      "});"
                    ],
                    "_lastExecutionId": "3ed3111b-d994-4c85-a525-e38593817722"
                  }
                }
              ]
            },
            {
              "id": "6826e899-5e48-459c-a081-467d4dc0b371",
              "name": "5-DeleteAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "55cde90a-e160-4fab-907f-ed369e787c19",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {",
                      "    pm.response.to.have.status(204);",
                      "});",
                      "",
                      ""
                    ],
                    "_lastExecutionId": "b0882f25-3df2-436e-81e0-167e406110de"
                  }
                }
              ]
            },
            {
              "id": "f673dc55-5c4a-4612-804e-642689d5c5c0",
              "name": "6-GetAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "258c1bce-7425-4745-ab52-906d5beba668",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ],
                    "_lastExecutionId": "637fd890-b860-432a-ad65-f3b68447fbf2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "243c4c87-937d-4bf2-803b-b7455b8c472c",
            "name": "GoRestAPIWorkflow",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 6,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7383a82e-e47e-4cab-b2b2-e0315ce33d1f",
          "httpRequestId": "eec14756-7f7c-4691-a8fd-871a34a618f8",
          "scriptId": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
          "execution": "93534fe6-da41-4ad6-a718-e1afae241a99"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Your test name",
          "message": "expected 'active' to deeply equal 'inactive'",
          "stack": "AssertionError: expected 'active' to deeply equal 'inactive'\n   at Object.eval sandbox-script.js:3:4)",
          "checksum": "053eac14199aa5877b0f8026edd965e6",
          "id": "c96d954b-8e11-43f6-9d4a-1dbf86bd6776",
          "timestamp": 1742208850914,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c49c4a22-dd3e-410a-89d5-b2621f98627d",
          "name": "4-UpdateAUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \n    \"status\": \"active\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a377578-6936-469c-8c98-adc050f67cb2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 5000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test(\"Your test name\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"inactive\");",
                  "});"
                ],
                "_lastExecutionId": "3ed3111b-d994-4c85-a525-e38593817722"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "243c4c87-937d-4bf2-803b-b7455b8c472c",
            "exporter_id": "732190"
          },
          "item": [
            {
              "id": "e1fa4e4b-dc3c-4d6a-8002-af58b0d7210a",
              "name": "1-GetAllUsers",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users"
                  ],
                  "host": [
                    "{{GlobalBaseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "db69e599-577f-4fbf-96d4-bcc2ffd8e40e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "//check status code is 200:",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      ""
                    ],
                    "_lastExecutionId": "93534fe6-da41-4ad6-a718-e1afae241a99"
                  }
                }
              ]
            },
            {
              "id": "d8cf7aaa-3259-493d-8b4a-f591f173cc7a",
              "name": "2-CreateAUser",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"seema\",\n    \"gender\": \"female\",\n    \"email\": \"apiautomation_{{$randomEmail}}\",\n    \"status\": \"inactive\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "70437104-cbd1-45b2-b856-61a6c06c6d83",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const response = pm.response.json();",
                      "const user_id = response.id;",
                      "console.log(\"user id===>\" + user_id);",
                      "pm.variables.set(\"userID\", user_id);",
                      "//local variable: userID",
                      "",
                      "//LDECG",
                      "",
                      "//test cases:",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"check user name is seema\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.name).to.eql(\"seema\");",
                      "});",
                      "",
                      "pm.test(\"Content-Type is present\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});"
                    ],
                    "_lastExecutionId": "0b950002-d736-4bbb-89b6-f09d22688e36"
                  }
                }
              ]
            },
            {
              "id": "fd43fed3-497a-4fb4-a3e4-eaf057b9e41e",
              "name": "3-GetAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "094d270a-8ece-449b-98b2-11e18ec89ec5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"check userID is correct\", function(){",
                      "    const newUserId = pm.variables.get(\"userID\");",
                      "    console.log(\"new user id is: \" + newUserId);",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(newUserId);",
                      "});"
                    ],
                    "_lastExecutionId": "981c9203-f6e1-4db0-b64c-9d366d434a2b"
                  }
                }
              ]
            },
            {
              "id": "c49c4a22-dd3e-410a-89d5-b2621f98627d",
              "name": "4-UpdateAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \n    \"status\": \"active\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2a377578-6936-469c-8c98-adc050f67cb2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 5000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                      "});",
                      "",
                      "pm.test(\"Your test name\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql(\"inactive\");",
                      "});"
                    ],
                    "_lastExecutionId": "3ed3111b-d994-4c85-a525-e38593817722"
                  }
                }
              ]
            },
            {
              "id": "6826e899-5e48-459c-a081-467d4dc0b371",
              "name": "5-DeleteAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "55cde90a-e160-4fab-907f-ed369e787c19",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {",
                      "    pm.response.to.have.status(204);",
                      "});",
                      "",
                      ""
                    ],
                    "_lastExecutionId": "b0882f25-3df2-436e-81e0-167e406110de"
                  }
                }
              ]
            },
            {
              "id": "f673dc55-5c4a-4612-804e-642689d5c5c0",
              "name": "6-GetAUserByID",
              "request": {
                "url": {
                  "path": [
                    "public",
                    "v2",
                    "users",
                    "{{userID}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{tokenID}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "258c1bce-7425-4745-ab52-906d5beba668",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ],
                    "_lastExecutionId": "637fd890-b860-432a-ad65-f3b68447fbf2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "243c4c87-937d-4bf2-803b-b7455b8c472c",
            "name": "GoRestAPIWorkflow",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "8e9018d7-2f5e-4fe7-bb80-2d91f4d998c9",
          "length": 6,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "897bee65-a405-4cfb-a76b-a1021661039f",
          "scriptId": "2a377578-6936-469c-8c98-adc050f67cb2",
          "execution": "3ed3111b-d994-4c85-a525-e38593817722"
        }
      }
    ],
    "error": null
  }
}